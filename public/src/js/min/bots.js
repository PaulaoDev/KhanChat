!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=25)}([function(e,t,n){"use strict";e.exports={gen_id:function(){return Math.floor(1e3*Math.random())+Math.floor(1e3*Math.random())},session:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(null===t)return sessionStorage.getItem(e)?sessionStorage.getItem(e):null;null!==t&&(sessionStorage.getItem(e)||sessionStorage.setItem(e,t))},clear_input:function(){return $(".emit-message").val("")},user_on_exists:function(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];return chat.peoples_add.includes(e.nome)},to_scroll:function(){var e=document.querySelector(".messages");$(".messages").animate({scrollTop:e.scrollHeight},"slow")},get_user:function(){return{id:user.user_id,nome:user.nome,icon:user.icon}},get_horario:function(){var e=new Date,t=function(e){return e<10?"0"+e:e},n=[t(e.getHours()),t(e.getMinutes()),t(e.getSeconds())];return n[0]+":"+n[1]+":"+n[2]},html_element:function(e){var t=document.createElement("div");return t.innerHTML=e,t.firstChild},removerAcentos:function(e){var t=e,n={a:/[\xE0-\xE6]/g,A:/[\xC0-\xC6]/g,e:/[\xE8-\xEB]/g,E:/[\xC8-\xCB]/g,i:/[\xEC-\xEF]/g,I:/[\xCC-\xCF]/g,o:/[\xF2-\xF6]/g,O:/[\xD2-\xD6]/g,u:/[\xF9-\xFC]/g,U:/[\xD9-\xDC]/g,c:/\xE7/g,C:/\xC7/g,n:/\xF1/g,N:/\xD1/g};for(var r in n){var o=n[r];t=t.replace(o,r)}return t},bot_write:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=(document.querySelector.bind(document),1e4*t.length/t.length),r=0,o=t.length-1;setInterval(function(){var n=t[r];e.innerHTML=n,++r>o&&(r=0)},n)}}},function(e,t,n){"use strict";var r=n(0),o=(r.gen_id,r.session,r.clear_input,r.user_on_exists,r.to_scroll,r.get_user);r.get_horario;e.exports=function(){return{login:function(e){return'\n            <div class="people" id="'+e.id+'">\n              <span class="status-active"></span>\n              <p class="name">'+e.nome+'</p>\n              <img src="'+(chat.url+e.icon)+'" alt="" class="my-icon">\n              <div class="user-message"></div>\n            </div>\n      '},ons:function(e){return'<span class="users-on spanabble">'+e.ons+"</span>"},message:function(e){if(null===e.nome)return"";var t=e.nome===o().nome;return $('\n              <div id="'+e.id+'" class="message">\n                '+(t?"":'<div class="user">\n                    <img src="'+(chat.url+e.icon)+'" alt="">\n                  </div>')+'\n                <div class="body" style="'+(t?"border-bottom-right-radius: 0px !important;background:"+chat.colors.message_me+";":"border-bottom-left-radius:0px!important;")+'">\n                  <div class="body-user">\n                      <p class="name-user">'+e.nome+'</p>\n                      <div class="time">'+e.horario+'</div>\n                  </div>\n                  <div class="text" '+(function(e){return/(.*)<a(.*)>(.*)<\/a>(.*)/.test(e)?e:!!/(.*)<iframe(.*)>(.*)<\/iframe>(.*)/.test(e)&&e}(e.text)?'style="flex-direction:column;"':"")+">"+e.text+"</div>\n                </div>\n                "+(t?'<div class="user">\n                    <img src="'+(chat.url+e.icon)+'" alt="">\n                  </div>':"")+"\n              </div>\n          ").attr("data-user",JSON.stringify(e))},message_people:function(e){var t=function(e){return'\n              <span class="arrow-user" style="border-right: 7.5px solid #2ecc71;"></span>\n              <div class="message">\n                <div class="text-user" style="background:#2ecc71">'+e+"</div>\n              </div>\n          "},n="";return document.querySelector(".people-active")||(console.log($('div.people[id="'+e.id+'"]>img')),$('div.people[id="'+e.id+'"]>img').css("border","1.5px solid #2ecc71"),(n=$('div.people[id="'+e.id+'"] .user-message')).addClass("people-active"),n.html(t("Nova Mensagem"))),document.querySelector(".people-active")&&($(".people-active").parent().find("img").css("border","none"),$(".people-active").html(""),$(".people-active").removeClass("people-active"),(n=$('div.people[id="'+e.id+'"] .user-message')).addClass("people-active"),n.html(t("Nova Mensagem")),$('div.people[id="'+e.id+'"]>img').css("border","1.5px solid #2ecc71")),n},logout:function(e){return $('\n              <div id="'+e.id+'" class="message">\n                <div class="user">\n                  <img src="'+(chat.url+e.icon)+'" alt="">\n                </div>\n                <div class="body">\n                  <div class="body-user">\n                      <p class="name-user">'+e.nome+'</p>\n                      <div class="time">'+e.horario+'</div>\n                  </div>\n                  <div class="text">'+e.nome+" saiu da sala.</div>\n                </div>\n              </div>\n          ").attr("data-user",JSON.stringify(e))},message_write:function(e){return $('\n            <div write-id="'+e.id+'" class="message bounceIn animated">\n              <div class="user">\n                <img src="'+(chat.url+e.icon)+'" alt="">\n              </div>\n              <div class="body">\n                <div class="body-user">\n                    <p class="name-user">'+e.nome+'</p>\n                    <div class="time">'+e.horario+'</div>\n                </div>\n                <div class="text">\n                    <div class="spinner">\n                      <div class="bounce1"></div>\n                      <div class="bounce2"></div>\n                      <div class="bounce3"></div>\n                    </div>\n                </div>\n              </div>\n            </div>\n          ')}}}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";var r=n(0),o=(r.gen_id,r.session,r.clear_input),i=(r.user_on_exists,r.to_scroll,r.get_user,r.get_horario,n(1),n(6)),s="",u=function(e){return/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(e)};e.exports={bot_spam:function(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];return function(e){return e===s||(s=e,!1)}(e)?(o(),""):e.trim()},bot_remove:function(e){$(e)&&$(e).remove()},bot_strip_tags:function(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];return function(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent.trim()}(e).trim()},bot_youtube:function(e){var t="";return e.split(" ").map(function(e){return t+=function(e){var t=function(e){return e.includes("https://youtu.be/")?"https://youtu.be/":!!e.includes("youtube.com/watch?v=")&&"youtube.com/watch?v="}(e);if(u(e)&&t){var n=e.split(t).pop();/(.*)\&(.*)/.test(n)&&(n=n.replace("&","?")),e='\n\t\t\t<button class="btn-link" onclick="apagar_luz(this)" style="border:none;background:#3498db;cursor:pointer">Apagar Luz</button>\n\t\t\t<iframe class="upload" width="450" height="315" style="margin-top:15px" src="https://www.youtube.com/embed/'+n+'" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen></iframe>\n\t\t',console.log(e)}return e.trim()}(e)+" "}),t.trim()},bot_urls_media:function(e){var t="";return e.split(" ").map(function(e){return t+=function(e){if(u(e)){var t="";e.includes("?")&&(t=e.split("?")[0]),t=t.split(".").pop(),["mp4","webm","mpg","wmv","mov","avi"].includes(t)&&(e=function(e){return'\n\t\t<button class="btn-link" onclick="apagar_luz(this)" style="border:none;background:#3498db;cursor:pointer">Apagar Luz</button>\n\t\t<video width="350" height="315" controls class="upload">\n\t\t  <source src="'+e.url+'" type="video/'+e.ext+'">\n\t\t</video>\n\t'}({url:e,ext:t})),["mp3","wav","pcm","acc","ogg","wma"].includes(t)&&(e=function(e){return'\n\t\t<button class="btn-link" onclick="apagar_luz(this)" style="border:none;background:#3498db;cursor:pointer">Apagar Luz</button>\n\t\t<audio controls class="upload">\n\t\t  <source src="'+e.url+'" type="audio/'+e.ext+'">\n\t\t</audio>\n\t'}({url:e,ext:t}))}return e.trim()}(e)+" "}),t.trim()},bot_url:function(e){var t="";return e.split(" ").map(function(e){return t+=function(e){if(u(e)){var t=document.createElement("a");t.href=e;var n=t.hostname.split("."),r="www"===n[0]?n[1]:n[0];e='\n\t\t\t<a href="'+e+'" style="background:'+function(e){var t={google:"#0057e7",youtube:"#cc181e",facebook:"#3b5998",github:"#333",default:"#3498db"};return t[e]?t[e]:t.default}(r)+'" class="btn-link" target="__blank">\n\t\t\t\t'+r+"\n\t\t\t</a>\n  \t\t"}return e.trim()}(e)+" "}),t.trim()},bot_input:function(e){var t=/^\/bot\s(.*)\s(.*)$/;if(t.test(e)){var n=Array.from(e.match(t)).slice(1),r=n[0].trim();r.includes(" ")&&(r=r.split(" "));var o=n[1].trim();return Array.isArray(r)&&(o=r[1]+" "+o,r=r[0]),o=o.trim(),console.log("Comando: "+r+", Capture: "+o),i[r]&&chat.bot_input&&i[r](o,socket),"init"===r&&i[r](o,socket),""}return e}}},function(e,t,n){"use strict";(function(t){t.neural=t.neural||n(11);neural.respond("hello init").run(function(){this.retorno(function(e){var t="global"===chat.sala_origin?"":chat.sala_origin;return"\n\t\t\tOlá "+e.nome+" seja bem vindo ao chat "+t+", meu nome é Junior!! 😄 \n\t\t"})}).save("hello"),neural.respond("o?(i|ie|la|ei) (junior|junior bot)").run(function(){this.retorno(function(e){return $(".junior-bot-user .user-message").css("display","none"),"Oie "+e.nome+", tudo bem com você? 🤗"})}).save("oi"),neural.respond("(junior|junior bot) quem e seu criador").run(function(){this.retorno(function(e){return"Meu criador é https://github.com/PaulaoDev"})}).save("criador"),neural.respond("(.*)(junior|junior bot) (eu|eu quero|quero) ouvir(.*?)").run(function(e,t){t=(t=(t=this.args())[t.length-1]).trim(),this.retorno(function(e){return/funk/gim.test(t)?"https://www.youtube.com/watch?v=qc3rKuLI_uM":/sertanejo/gim.test(t)?"https://www.youtube.com/watch?v=HVlUnTekqqU":/rock/gim.test(t)?"https://www.youtube.com/watch?v=CSvFpBOe8eY":""})}).save("musica"),neural.respond("(.*)ta bem (junior|junior bot)\\?").run(function(){this.retorno(function(e){e.payload="https://www.youtube.com/watch?v=AxmsC2arlHk&start=18",e.bot={nome:"Junior Bot",icone:"src/images/junior.png",node:'[write-id="junior-bot-user"]'};var t=JSON.stringify(e);return"\n\t\t\tTo sim "+e.nome+' 😁, quer ver um video Engraçado?\n\t\t\t<button style="background:#3498db;border:none;cursor:pointer;" onclick="payload_event(this)" class="btn-link" data-payload=\''+t+"'>\n\t\t\t\tAssistir Video\n\t\t\t</button>\n\t\t"})}).save("ta_bem"),neural.respond("(junior|junior bot) qual e(.*)").run(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.retorno(function(e){return t=t.trim(),console.log(t),/meu nome/gim.test(t)&&(t="Seu nome é "+e.nome+" 🤗"),t})}).save("perguntaa"),neural.respond("(junior|junior bot) quero (rir|ficar (?:feliz|alegre)?|dar risada|(?:ver)? ?video engracado|rir (.*)|ver memes?|memes?)").run(function(){this.retorno(function(e){return"https://www.youtube.com/watch?v=AxmsC2arlHk&start=76&autoplay=1"})}).save("memes"),e.exports=neural}).call(this,n(2))},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();e.exports=new(function(){function e(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.filters=new Map,this}return r(e,[{key:"set",value:function(e,t){this.filters.set(e,t)}},{key:"get_filters",value:function(){return this.filters.getAll()}},{key:"run",value:function(e){return e=e.trim(),e=this.get_filters().reduce(function(e,t){return t(e)},e)}}]),e}())},function(e,t,n){"use strict";e.exports={ban:function(e,t){Array.from(document.querySelectorAll(".people .name")).map(function(n){if($(n).html()===e){$(".emit-message").val("");var r=$(n).parent().attr("id"),o=$("div#"+r+".message").data().user;$("div#"+r+".people").remove(),$("div#"+r+".message").remove(),t.emit("banido",o)}})},init:function(e,t){$(".emit-message").val(""),"key"===btoa(e)&&(chat.bot_input=!0,$(".emit-message").attr("placeholder","Bot input iniciado com sucesso."))}}},,function(e,t,n){"use strict";e.exports=[n(9),n(10),n(12)]},function(e,t,n){"use strict";var r=n(0),o=(r.gen_id,r.session,r.clear_input,r.user_on_exists),i=(r.to_scroll,r.get_user,r.get_horario,n(1)),s={id:"0",nome:"new user bot",on:!0,code:"src/js/modules/bots/new_user.js",events:["message","escrevendo"],call:function(e,t,n){chat.messages_receive_user.map(function(e){o(e)||(chat.peoples++,chat.peoples_add.push(e.nome),$(".peoples-timeline").append(i().login(e)),$(".users-on").html(chat.peoples))})}};e.exports=s},function(e,t,n){"use strict";var r=n(0),o=(r.gen_id,r.session,r.clear_input,r.user_on_exists,r.to_scroll,r.get_user,r.get_horario),i=r.removerAcentos,s=r.bot_write,u=n(5),a=n(3),c=(n(1),n(4));u.set("bot urls media embed",a.bot_urls_media),u.set("embed youtube",a.bot_youtube),u.set("url",a.bot_url);n(4);var l="src/images/junior.png",d=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;t=function(e,t){return"hello init"===t&&(e.init=!0),e.return=!1,e.text=u.run(e.text),e.nome="Junior Bot",e.icon=l,e.is_bot=!0,e.horario=o(),e.id="junior-bot-user",e.node='[write-id="'+e.id+'"]',e}(t),e.emit("escrevendo",t),setTimeout(function(){e.emit("message",t),e.emit("clear",t.node)},n)},m={id:"1",nome:"junior bot",desc:"Robô feito para interagir com os usuarios pelo o chat.",on:!0,code:"src/js/modules/bots/junior.js",icon:l,events:["on","message","login"],call:function(e,t,n){if(!t.text)return!1;!function(e,t,n,r){e="login"===r?"hello init":e,c.run(e,function(e){t.text=e(t),d(n,t,1500)})}(i(t.text.trim()),t,n,e),"on"===e&&s(document.querySelector("div#junior-bot-user .text-user"),["Diz oi ai vai","To esperando","Me chama ai","To aguardando","Seja legal comigo"])}};e.exports=m},function(e,t,n){"use strict";var r={calls:{},entrys:[],train:function(e,t){r.entrys.push({input:new RegExp("^"+e+"$","i"),output:t})},run_train:function(e){return r.entrys.map(function(t){var n=t.input,r=t.output;t.level;return{input:n,output:r,status:n.test(e)}})},respond:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return{run:function(e){return{save:function(n){t.map(function(e){return r.train(e,n)}),r.calls[n]=e}}}}}};r.run=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){},n=r.run_train(e).filter(function(e){return e.status});if(null!==(n=Array.isArray(n)&&n.length>0?n[0]:null)){var o=n.output,i=n.input,s=Array.from(e.match(i))||[];s=s.length>0?s.slice(1):[],r.calls[o].bind({receive:e,intent:o,args:function(){return s},retorno:t}).apply(void 0,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(s))}},e.exports=r},function(e,t,n){"use strict";var r=n(0),o=(r.gen_id,r.session,r.clear_input,r.user_on_exists,r.to_scroll,r.get_user),i=(r.get_horario,r.removerAcentos,r.bot_write,function(e){var t=Array.from(document.querySelectorAll('.message[id="'+e+'"]')).pop();if(t=t,$(t).attr("data-user")){var n=JSON.parse(t.dataset.user);return new Date-function(e){var t=new Date,n=e.split(":"),r=n[0],o=n[1],i=n[2];return t.setHours(r),t.setMinutes(o),t.setSeconds(i),t}(n.horario)}}),s={id:"2",nome:"bot remove",desc:"Robô feito para remover usuarios inativos do chat.",on:!0,code:"src/js/modules/bots/bot_remove.js",icon:"src/images/bot-remove.png",events:["on","write","message","login"],call:function(e,t,n){Array.from(document.querySelectorAll(".people")).map(function(e){var t=$(e).attr("id");i(t)>=18e5&&!t.includes("bot")&&($('.people[id="'+t+'"]').remove(),t===o().id&&function(){var e=function(e){return sessionStorage.removeItem(e)};socket.emit("desconectou",o()),e("icone"),e("nome"),e("id"),e("status"),e("my_id"),setTimeout(function(){return location.href="./"},500)}())})}};e.exports=s},,,,,,,,,,,,,function(e,t,n){"use strict";window.bots=n(8);location.pathname;Object.keys(bots).map(function(e){var t=bots[e];t.icon&&(bots[e].icon="../"+t.icon),bots[e].url="../bot/"+t.id,bots[e].size=t.call.toString().length,bots[e].eventos=t.events.map(function(e){return" "+e+" "}).toString()})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,