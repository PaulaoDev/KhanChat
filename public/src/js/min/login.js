!function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=24)}({0:function(e,t,n){"use strict";e.exports={gen_id:function(){return Math.floor(1e3*Math.random())+Math.floor(1e3*Math.random())},session:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(null===t)return sessionStorage.getItem(e)?sessionStorage.getItem(e):null;null!==t&&(sessionStorage.getItem(e)||sessionStorage.setItem(e,t))},clear_input:function(){return $(".emit-message").val("")},user_on_exists:function(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];return chat.peoples_add.includes(e.nome)},to_scroll:function(){var e=document.querySelector(".messages");$(".messages").animate({scrollTop:e.scrollHeight},"slow")},get_user:function(){return{id:user.user_id,nome:user.nome,icon:user.icon}},get_horario:function(){var e=new Date,t=function(e){return e<10?"0"+e:e},n=[t(e.getHours()),t(e.getMinutes()),t(e.getSeconds())];return n[0]+":"+n[1]+":"+n[2]},html_element:function(e){var t=document.createElement("div");return t.innerHTML=e,t.firstChild},removerAcentos:function(e){var t=e,n={a:/[\xE0-\xE6]/g,A:/[\xC0-\xC6]/g,e:/[\xE8-\xEB]/g,E:/[\xC8-\xCB]/g,i:/[\xEC-\xEF]/g,I:/[\xCC-\xCF]/g,o:/[\xF2-\xF6]/g,O:/[\xD2-\xD6]/g,u:/[\xF9-\xFC]/g,U:/[\xD9-\xDC]/g,c:/\xE7/g,C:/\xC7/g,n:/\xF1/g,N:/\xD1/g};for(var o in n){var a=n[o];t=t.replace(a,o)}return t},bot_write:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=(document.querySelector.bind(document),1e4*t.length/t.length),o=0,a=t.length-1;setInterval(function(){var n=t[o];e.innerHTML=n,++o>a&&(o=0)},n)}}},24:function(e,t,n){"use strict";var o=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],o=!0,a=!1,r=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);o=!0);}catch(e){a=!0,r=e}finally{try{!o&&s.return&&s.return()}finally{if(a)throw r}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),a=n(0);a.gen_id,a.session;window.uploads=n(7);var r=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(null===t)return localStorage.getItem(e)?localStorage.getItem(e):null;null!==t&&(localStorage.getItem(e)||localStorage.setItem(e,t))};new Vue({el:"#app",data:{people:{email:null,senha:null,nome:null,icone:null},register:!1,upload:!1,loginSuccess:!1,loginError:!1,messageRegisterSuccess:!1,messageRegisterError:!1},methods:{apiRequest:function(e,t){return new Promise(function(n,o){fetch(e,{method:"POST",credentials:"include",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then(function(e){return e.json()}).then(function(e){n(e)})})},toggle:function(){this.people={email:null,senha:null,nome:null,icone:null},this.register=!this.register},loadRemember:function(){r("email")&&r("password")&&(this.people.email=r("email"),this.people.senha=r("password"))},remember:function(e){Object.keys(e).map(function(t){return r(t,e[t])})},uploadImage:function(e){var t=this;if(this.upload)return!1;var n=o(e.target.files,1)[0],a=document.querySelector(".btn-file-up");uploaded("../../../upload/imagem",n).then(function(e){t.upload=!0,t.people.icone=e.path,a.style.cursor="default",a.addEventListener("click",function(){return!1})})},success_login:function(e){this.remember(e);var t=location.hash.slice(1);t&&t.includes("room/")?location.href=location.origin+t.replace("#/room/"):(console.log("Room"),location.href="/room")},login:function(){var e=this,t={email:this.people.email,password:this.people.senha};this.apiRequest("../../../users/auth",t).then(function(n){"success"===n.msg?(e.loginSuccess=!0,setTimeout(function(){return e.success_login(t)},3500)):(e.loginError=!0,setTimeout(function(){return e.loginError=!1},3500))})},userRegister:function(){var e=this,t={email:this.people.email,password:this.people.senha,username:this.people.nome,icon:this.people.icone,created_at:new Date,updated_at:new Date};this.apiRequest("../../../users/new",t).then(function(n){console.log(t),"success"===n.msg?e.messageRegisterSuccess=!0:e.messageRegisterError=!0})}}}).loadRemember()},7:function(e,t,n){"use strict";function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=n(0),r=(a.gen_id,a.session,a.clear_input,a.user_on_exists,a.to_scroll,a.get_user),i=a.get_horario;window.uploaded=function(e,t){return new Promise(function(n,o){var a=new FormData;a.append("fileUpload",t),fetch(e,{method:"POST",body:a}).then(function(e){return e.json()}).then(function(e){return n(e)}).catch(function(e){return o(e)})})},e.exports.image_upload=function(){$(this).parent().html('<label class="btn btn-file-upload" style="cursor:pointer">Image Upload<input type="file" style="display: none;" class="image-upload" accept="image/*"></label>'),$(".image-upload").change(function(){var e=$(this).prop("files")[0];uploaded("../../../upload/imagem",e,function(e){if("success"===e.msg){command_toggle();var t='\n\t\t\t\t\t<button class="btn-link" onclick="apagar_luz(this)" style="border:none;background:#3498db;cursor:pointer">Apagar Luz</button>\n\t\t\t\t\t<img src="'+e.path+'" class="upload"/>\n\t\t\t\t';socket.emit("chat",o({},chat.sala+"message",Object.assign({},r(),{text:t,horario:i()})))}})})},e.exports.video_upload=function(){$(this).parent().html('<label class="btn btn-file-upload" style="cursor:pointer">Video Upload<input type="file" style="display: none;" class="video-upload" accept="video/*"></label>'),$(".video-upload").change(function(){var e=$(this).prop("files")[0];uploaded("../../../upload/video",e,function(e){if("success"===e.msg){command_toggle();var t=e.path.split(".").pop(),n='\n\t\t\t\t\t<button class="btn-link" onclick="apagar_luz(this)" style="border:none;background:#3498db;cursor:pointer">Apagar Luz</button>\n\t\t\t\t\t<video class="video-upload upload" controls><source src="'+e.path+'" type="video/'+t+'"></video>\n\t\t\t\t';socket.emit("chat",o({},chat.sala+"message",Object.assign({},r(),{text:n,horario:i()})))}})})},e.exports.audio_upload=function(){$(this).parent().html('<label class="btn btn-file-upload" style="cursor:pointer">Audio Upload<input type="file" style="display: none;" class="video-upload" accept="audio/*"></label>'),$(".video-upload").change(function(){var e=$(this).prop("files")[0];uploaded("../../../upload/audio",e,function(e){if("success"===e.msg){command_toggle();var t=e.path.split(".").pop(),n='\n\t\t\t\t\t<button class="btn-link" onclick="apagar_luz(this)" style="border:none;background:#3498db;cursor:pointer">Apagar Luz</button>\n\t\t\t\t\t<audio class="audio-upload upload" controls><source src="'+e.path+'" type="audio/'+t+'"></audio>\n\t\t\t\t';socket.emit("chat",o({},chat.sala+"message",Object.assign({},r(),{text:n,horario:i()})))}})})},e.exports.codigo_upload=function(){$(this).parent().html('<label class="btn btn-file-upload" style="cursor:pointer">Codigo Upload<input type="file" style="display: none;" class="code-upload" accept=".js,.html,.php,.css,.sass,.scss,.rb,.py,.ts,.c,.go,.rar"></label>'),$(".code-upload").change(function(){var e=$(this).prop("files")[0];uploaded("../../../upload/arquivo",e,function(e){if("success"===e.msg){command_toggle();var t={js:"#f7df1e",php:"#4f5b93",rar:"#8e44ad",css:"#00a98f",html:"#e34f26",default:"#f39c12"},n=e.path.split(".").pop(),a=t[n]?t[n]:t.default;console.log(a);var s='\n\t\t\t\t\t<a href="'+e.path+'" class="btn-link upload-up" style="background:'+a+';border:none;cursor:pointer;" download>Fazer download: '+e.path.split("/").pop()+"</a>\t\n\t\t\t\t";"rar"!==n&&(s='\n\t\t\t\t\t\t<a class="btn-link" target="__blank" href="./code/'+e.path.split("/").pop()+'" style="border:none;background:#3498db;cursor:pointer;width:40%;">Visualizar Codigo</button>\n\t\t\t\t\t\t'+s+"\n\t\t\t\t\t"),socket.emit("chat",o({},chat.sala+"message",Object.assign({},r(),{text:s,horario:i()})))}})})},e.exports.help_chat=function(){$(this).parent().html('<div class="helped"><a href="mailto:jskhanframework@gmail.com?Subject=KhanChat" target="__blank"><div class="help-item"><i class="fa fa-envelope fa-lg" aria-hidden="true"></i><p class="entry">jskhanframework@gmail.com</p></div></a><a href="https://github.com/PaulaoDev" target="__blank"><div class="help-item"><i class="fa fa-github fa-lg" aria-hidden="true"></i><p class="entry">PaulaoDev</p></div></div></a>')}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,